#!/usr/bin/env bash
# Append an alias to your .bashrc. Also checks for existing aliases, and stops
# you from overwriting them.
# You must have a bashrc in your home directory (either at ~/.bashrc or
# ~/.config/bashrc).

ALIAS=$1
VALUE=$2

function show_usage(){
    echo "usage: make-alias <alias> <command>"
    echo ""
    echo "Options & Parameters"
    echo "alias                         The alias to store the command under."
    echo "command                       The command to store under the alias."
    echo "-h, --help                    Show this help."
}

while (( "$#" )) ; do
    case ${1} in
    --) # done parsing args
        shift
        break
        ;;
    -h|--help)
        show_usage
        exit 0
        ;;
    *) # unknown option
        PARAMS="$PARAMS $1"
        shift
        ;;
    esac
done

# set positional arguments in their proper place
eval set -- "$PARAMS"

function fetch_bash_rc(){
    config_rc="${HOME}/.config/bashrc"
    home_rc="${HOME}/.bashrc"
    if [ -f ${config_rc} ]; then
        echo ${config_rc}
        exit 0
    fi

    if [ -f ${home_rc} ]; then
        echo ${home_rc}
        exit 0
    fi
    exit 1
}

function alias_is_unique() {
    alias=$1
    rc_path=$2
    result=$(cat ${rc_path} | grep "${alias}=")
    if [[ $? == 1 ]]; then
        echo true
    else
        echo false
    fi
}

RC_PATH=$(fetch_bash_rc)
if [[ $? == 1 ]]; then
    echo "No bashrc found - are you using bash?"
    exit 1
fi

IS_UNIQUE=$(alias_is_unique ${ALIAS} ${RC_PATH})
if ${IS_UNIQUE}; then
    echo "${ALIAS}=${VALUE}" >> ${RC_PATH}
else
    echo "An alias with the name \"${ALIAS}\" already exists! Aborting.."
fi
